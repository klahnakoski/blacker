{
    "author": "Various",
    "author_email": "kyle@lahnakoski.com",
    "classifiers": [
        "Development Status :: 4 - Beta",
        "Environment :: Console",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
        "Programming Language :: Python",
        "Programming Language :: Python :: 3.6",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3 :: Only",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "Topic :: Software Development :: Quality Assurance"
    ],
    "description": "More Black! Denser Black formatting",
    "entry_points": {"console_scripts": [
        "black=black:patched_main",
        "blackd=blackd:patched_main [d]",
        "black-primer=black_primer.cli:main"
    ]},
    "include_package_data": true,
    "install_requires": [
                 "aiohttp",     "aiohttp_cors",          "appdirs",    "attrs==18.1.0",
              "click==6.5", "dataclasses==0.6",         "pathspec",  "regex==2020.1.8",
             "toml==0.9.4", "typed-ast==1.4.0"
    ],
    "license": "MIT",
    "long_description": {
        "$concat": [
            "",
            "# More Black! - Denser Black formatting",
            "",
            "This is s a fork of [the Black code formatter](https://github.com/psf/black)",
            "",
            "### Problem",
            "",
            "I love Black formatting because I agree with its formatting choices, but it does have one pathology: [Excessive indenting on data structures](https://github.com/psf/black/issues/626)",
            "",
            "```python",
            "schema = {",
            "    \"mappings\": {",
            "        \"test\": {",
            "            \"properties\": {",
            "                \"one_value\": {",
            "                    \"type\": \"keyword\",",
            "                    \"store\": True,",
            "                }",
            "            }",
            "        }",
            "    }",
            "}",
            "```",
            "",
            "The pathology looks even worse for singleton lists; many lines can be wasted on lonely brackets:  ",
            "",
            "```python",
            "my_method(",
            "    [",
            "        {",
            "            \"name\": \"a\",",
            "            \"value\": 42",
            "        }",
            "    ]",
            ")",
            "```",
            "",
            "",
            "### Solution: More Black!",
            "",
            "When there is only one property (or list item, or parameter), then do not make a new line.",
            "",
            "```python",
            "schema = {\"mappings\": {\"test\": {\"properties\": {\"one_value\": {",
            "    \"type\": \"keyword\", ",
            "    \"store\": True,",
            "}}}}}",
            "",
            "```",
            "",
            "Singleton lists are especially dense. ",
            "",
            "```python",
            "my_method([{",
            "    \"name\": \"a\",",
            "    \"value\": 42",
            "}])",
            "```",
            "",
            "",
            "## Usage",
            "",
            "Please [read the official Black documentation at time of fork](https://github.com/psf/black/blob/537ea8df35b1004bdb228b483907fb5dd92e5257/README.md#usage)",
            "",
            "",
            "## Development",
            "",
            "Be sure you are in the `mo-black` main directory",
            "",
            "Setup virtual environment",
            "",
            "    python -m venv .venv",
            "    source .venv/bin/activate",
            "",
            "Install requirements ",
            "",
            "    pip install -r requirements.txt",
            "    pip install -r tests/requirements.txt",
            "",
            "Set some environment variables",
            "",
            "    export PYTHONPATH=src:.",
            "    export SKIP_AST_PRINT=true",
            "",
            "Run the tests ",
            "",
            "    python -m unittest tests/test_black.py",
            "",
            "Here is the same for Windows...",
            "",
            "    c:\\Python38\\python -m pip install virtualenv",
            "    c:\\Python38\\python -m virtualenv .venv             ",
            "    .venv\\Scripts\\activate",
            "    pip install -r requirements.txt",
            "    pip install -r tests\\requirements.txt",
            "    set PYTHONPATH=src;.",
            "    set SKIP_AST_PRINT=true",
            "    python -m unittest tests\\test_black.py",
            "",
            "### Upgrade `requirements.txt`",
            "",
            "The `requirements.in` file is for humans to update.  Use `pip-compile` to update the locked `requirements.txt` file:",
            "",
            "    pip install -r tests\\requirements.txt",
            "    pip-compile --upgrade --generate-hashes --output-file requirements.txt requirements.in",
            "    pip install -r requirements.txt",
            "",
            "### Development Installation",
            "",
            "You can install `mo-black` from the main directory",
            "",
            "    python.exe -m pip install .",
            ""
        ],
        "separator": "\n"
    },
    "long_description_content_type": "text/markdown",
    "name": "mo-black",
    "package_dir": {"": "src"},
    "packages": ["blackd", "black", "blib2to3", "blib2to3.pgen2"],
    "use_scm_version": {
        "write_to": "src/_black_version.py",
        "write_to_template": "version = \"{version}\"\n",
    },
    "url": "https://github.com/klahnakoski/mo-black",
    "version": "3.90.20218"
}